{"version":3,"file":"static/js/345.66f51979.chunk.js","mappings":"uOACA,EAAwB,0BAAxB,EAAmE,mC,6BCI7DA,GAAaC,EAAAA,EAAAA,OAAK,kBAAM,6BAAsB,IA+BpD,EAxBmB,WACjB,IAAQC,GAAWC,EAAAA,EAAAA,IAAe,SAACC,GAAK,OAAKA,EAAMF,MAAM,IAAjDA,OACR,GAAgDG,EAAAA,EAAAA,WAAkB,GAAM,eAAjEC,EAAgB,KAAEC,EAAmB,KAE5C,OACE,iBAAKC,UAAWC,EAAa,WAC3B,SAAC,EAAAC,SAAQ,CAACC,UAAU,SAACC,EAAA,EAAa,IAAI,SACnCV,EAAOW,KAAI,SAACC,GAAc,OACzB,SAAC,EAAAJ,SAAQ,CAACC,UAAU,SAACC,EAAA,EAAa,IAAI,UACpC,SAACZ,GAAU,UAAoBc,GAAdA,EAAMC,KADmBD,EAAMC,GAEvC,OAIf,oBAAQP,UAAWC,EAAuBO,QAAS,kBAAMT,GAAoB,EAAK,EAAC,WACjF,SAAC,MAAe,IAAG,eAIpBD,IAAoB,SAACW,EAAA,EAAS,CAACV,oBAAqBA,MAG3D,C","sources":["webpack://project-management-app/./src/components/BoardsList/index.module.scss?3645","components/BoardsList/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cards\":\"BoardsList_cards__gW7ea\",\"addBoardButton\":\"BoardsList_addBoardButton__NQRtI\"};","import React, { lazy, Suspense, useState } from 'react';\r\n\r\nimport { IBoards } from 'api/boards/index.types';\r\nimport { useAppSelector } from 'store/hooks';\r\n\r\nconst BoardsItem = lazy(() => import('./BoardsItem'));\r\nimport { BsClipboardPlus } from 'react-icons/bs';\r\n\r\nimport styles from './index.module.scss';\r\nimport FormBoard from './FormBoard';\r\nimport LoaderSpinner from 'components/LoaderSpinner';\r\n\r\nconst BoardsList = () => {\r\n  const { boards } = useAppSelector((state) => state.boards);\r\n  const [isFormBoardModal, setIsFormBoardModal] = useState<boolean>(false);\r\n\r\n  return (\r\n    <div className={styles.cards}>\r\n      <Suspense fallback={<LoaderSpinner />}>\r\n        {boards.map((board: IBoards) => (\r\n          <Suspense fallback={<LoaderSpinner />} key={board.id}>\r\n            <BoardsItem key={board.id} {...board} />\r\n          </Suspense>\r\n        ))}\r\n      </Suspense>\r\n\r\n      <button className={styles.addBoardButton} onClick={() => setIsFormBoardModal(true)}>\r\n        <BsClipboardPlus />\r\n        Add Board\r\n      </button>\r\n\r\n      {isFormBoardModal && <FormBoard setIsFormBoardModal={setIsFormBoardModal} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardsList;\r\n"],"names":["BoardsItem","lazy","boards","useAppSelector","state","useState","isFormBoardModal","setIsFormBoardModal","className","styles","Suspense","fallback","LoaderSpinner","map","board","id","onClick","FormBoard"],"sourceRoot":""}