{"version":3,"file":"static/js/681.2784628f.chunk.js","mappings":"mQACA,EAAuB,yBAAvB,EAA0D,4BAA1D,EAA8F,0BAA9F,EAAsI,gC,SC8DtI,EAlDgC,SAAH,GAAoC,IAA9BA,EAAE,EAAFA,GAAIC,EAAK,EAALA,MAAOC,EAAW,EAAXA,YACtCC,GAAWC,EAAAA,EAAAA,KACXC,GAAWC,EAAAA,EAAAA,MAEjB,GAAoDC,EAAAA,EAAAA,WAAkB,GAAM,eAArEC,EAAkB,KAAEC,EAAqB,KAChD,GAAgDF,EAAAA,EAAAA,WAAkB,GAAM,eAAjEG,EAAgB,KAAEC,EAAmB,KAEtCC,EAAgB,SAACC,GACrBA,EAAEC,kBAC2C,SAAxCD,EAAEE,OAA6BC,MAClCL,GAAoB,GAEuB,WAAxCE,EAAEE,OAA6BC,MAClCP,GAAsB,EAE1B,EAEMQ,EAAgB,CACpBC,cAAe,kBAAMf,GAASgB,EAAAA,EAAAA,IAAYnB,GAAI,EAC9CoB,YAAa,kBAAMX,GAAsB,EAAM,GAGjD,OACE,iCACE,iBAAKY,UAAWC,EAAaC,QAAS,kBAAMlB,EAAS,WAAD,OAAYL,GAAK,EAAC,WACpE,cAAGqB,UAAWC,EAAa,SAAErB,KAC7B,cAAGoB,UAAWC,EAAmB,SAAEpB,KACnC,iBAAKmB,UAAWC,EAAe,WAC7B,mBAAQN,KAAK,SAASQ,KAAK,SAASD,QAASX,EAAc,UACzD,SAAC,MAAO,OAEV,mBAAQI,KAAK,OAAOQ,KAAK,SAASD,QAASX,EAAc,UACvD,SAAC,MAAQ,YAKdJ,IACC,SAACiB,EAAA,EAAW,CAACD,KAAK,eAAeE,QAAST,EAAc,UACtD,+DAIHP,IACC,SAACiB,EAAA,EAAS,CAACC,oBAAqBjB,EAAqBX,GAAIA,EAAIC,MAAOA,EAAOC,YAAaA,MAIhG,C","sources":["webpack://project-management-app/./src/components/BoardsList/BoardsItem/index.module.scss?21b5","components/BoardsList/BoardsItem/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"BoardsItem_card__HwibW\",\"buttons\":\"BoardsItem_buttons__0auK0\",\"title\":\"BoardsItem_title__HDNiB\",\"description\":\"BoardsItem_description__gdgQR\"};","import React, { FC, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAppDispatch } from 'store/hooks';\r\n\r\nimport { IBoards } from 'api/boards/index.types';\r\nimport { deleteBoard } from 'api/boards';\r\n\r\nimport FormBoard from '../FormBoard';\r\nimport { ModalWindow } from 'components/ModalWindow/ModalWindow';\r\n\r\nimport { IoTrash, IoPencil } from 'react-icons/io5';\r\nimport styles from './index.module.scss';\r\n\r\nconst BoardsItem: FC<IBoards> = ({ id, title, description }) => {\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [isDeleteBoardModal, setIsDeleteBoardModal] = useState<boolean>(false);\r\n  const [isEditBoardModal, setIsEditBoardModal] = useState<boolean>(false);\r\n\r\n  const actionHandler = (e: React.MouseEvent<HTMLButtonElement | SVGElement>) => {\r\n    e.stopPropagation();\r\n    if ((e.target as HTMLButtonElement).name === 'edit') {\r\n      setIsEditBoardModal(true);\r\n    }\r\n    if ((e.target as HTMLButtonElement).name === 'delete') {\r\n      setIsDeleteBoardModal(true);\r\n    }\r\n  };\r\n\r\n  const deleteActions = {\r\n    confirmAction: () => dispatch(deleteBoard(id)),\r\n    closeWindow: () => setIsDeleteBoardModal(false),\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.card} onClick={() => navigate(`/boards/${id}`)}>\r\n        <p className={styles.title}>{title}</p>\r\n        <p className={styles.description}>{description}</p>\r\n        <div className={styles.buttons}>\r\n          <button name=\"delete\" type=\"button\" onClick={actionHandler}>\r\n            <IoTrash />\r\n          </button>\r\n          <button name=\"edit\" type=\"button\" onClick={actionHandler}>\r\n            <IoPencil />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {isDeleteBoardModal && (\r\n        <ModalWindow type=\"confirmation\" actions={deleteActions}>\r\n          <p>Do you want to delete this board?</p>\r\n        </ModalWindow>\r\n      )}\r\n\r\n      {isEditBoardModal && (\r\n        <FormBoard setIsFormBoardModal={setIsEditBoardModal} id={id} title={title} description={description} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BoardsItem;\r\n"],"names":["id","title","description","dispatch","useAppDispatch","navigate","useNavigate","useState","isDeleteBoardModal","setIsDeleteBoardModal","isEditBoardModal","setIsEditBoardModal","actionHandler","e","stopPropagation","target","name","deleteActions","confirmAction","deleteBoard","closeWindow","className","styles","onClick","type","ModalWindow","actions","FormBoard","setIsFormBoardModal"],"sourceRoot":""}